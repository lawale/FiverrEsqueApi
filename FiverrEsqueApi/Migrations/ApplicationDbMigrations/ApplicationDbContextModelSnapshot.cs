// <auto-generated />
using System;
using FiverrEsqueApi.Models.Data.DataContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace FiverrEsqueApi.Migrations.ApplicationDbMigrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("FiverrEsqueApi.Models.Domain.AppUser", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AccessFailedCount");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken();

                    b.Property<string>("DisplayPicture");

                    b.Property<string>("Email")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed");

                    b.Property<bool>("IsSeller");

                    b.Property<DateTime>("Joined");

                    b.Property<bool>("LockoutEnabled");

                    b.Property<DateTimeOffset?>("LockoutEnd");

                    b.Property<string>("Nationality");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash");

                    b.Property<string>("PhoneNumber");

                    b.Property<bool>("PhoneNumberConfirmed");

                    b.Property<string>("SecurityStamp");

                    b.Property<string>("SellerAccountDescription");

                    b.Property<bool>("TwoFactorEnabled");

                    b.Property<string>("UserName")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("FiverrEsqueApi.Models.Domain.AppUserInterest", b =>
                {
                    b.Property<int>("InterestId");

                    b.Property<string>("AppUserId");

                    b.HasKey("InterestId", "AppUserId");

                    b.HasIndex("AppUserId");

                    b.ToTable("AppUserInterest");
                });

            modelBuilder.Entity("FiverrEsqueApi.Models.Domain.AppUserLanguage", b =>
                {
                    b.Property<int>("LanguageId");

                    b.Property<string>("AppUserId");

                    b.HasKey("LanguageId", "AppUserId");

                    b.HasIndex("AppUserId");

                    b.ToTable("AppUserLanguage");
                });

            modelBuilder.Entity("FiverrEsqueApi.Models.Domain.AppUserNotification", b =>
                {
                    b.Property<int>("NotificationId");

                    b.Property<string>("AppUserId");

                    b.HasKey("NotificationId", "AppUserId");

                    b.HasIndex("AppUserId");

                    b.ToTable("AppUserNotification");
                });

            modelBuilder.Entity("FiverrEsqueApi.Models.Domain.AppUserSkill", b =>
                {
                    b.Property<int>("SkillId");

                    b.Property<string>("AppUserId");

                    b.HasKey("SkillId", "AppUserId");

                    b.HasIndex("AppUserId");

                    b.ToTable("AppUserSkill");
                });

            modelBuilder.Entity("FiverrEsqueApi.Models.Domain.Attachment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("Date");

                    b.Property<int>("MessageId");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<string>("Size")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("MessageId");

                    b.ToTable("Attachment");
                });

            modelBuilder.Entity("FiverrEsqueApi.Models.Domain.Gig", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("DeliveryDays");

                    b.Property<string>("GigDescription")
                        .IsRequired();

                    b.Property<bool>("IsGigActive");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<int>("NumberOfRevisions");

                    b.Property<int>("Price");

                    b.Property<string>("SellerId")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("SellerId");

                    b.ToTable("Gig");
                });

            modelBuilder.Entity("FiverrEsqueApi.Models.Domain.Interest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Interest");
                });

            modelBuilder.Entity("FiverrEsqueApi.Models.Domain.Language", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Language");
                });

            modelBuilder.Entity("FiverrEsqueApi.Models.Domain.Message", b =>
                {
                    b.Property<int>("MessageId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Content")
                        .IsRequired();

                    b.Property<string>("ReceiverId");

                    b.Property<string>("SenderId");

                    b.HasKey("MessageId");

                    b.HasIndex("ReceiverId");

                    b.HasIndex("SenderId");

                    b.ToTable("Message");
                });

            modelBuilder.Entity("FiverrEsqueApi.Models.Domain.Notification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("Date");

                    b.Property<string>("Message")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Notification");
                });

            modelBuilder.Entity("FiverrEsqueApi.Models.Domain.Rating", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("RecommendationRatingStarRating");

                    b.Property<int>("SellerCommunicationStarRating");

                    b.Property<int>("ServiceRatingStarRating");

                    b.HasKey("Id");

                    b.ToTable("Rating");
                });

            modelBuilder.Entity("FiverrEsqueApi.Models.Domain.Review", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("BuyerId")
                        .IsRequired();

                    b.Property<string>("BuyerReview")
                        .IsRequired();

                    b.Property<int>("RatingId");

                    b.Property<string>("SellerId")
                        .IsRequired();

                    b.Property<DateTime>("TimeOfReview");

                    b.HasKey("Id");

                    b.HasIndex("BuyerId");

                    b.HasIndex("RatingId")
                        .IsUnique();

                    b.HasIndex("SellerId");

                    b.ToTable("Review");
                });

            modelBuilder.Entity("FiverrEsqueApi.Models.Domain.Skill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Skill");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken();

                    b.Property<string>("Name")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ClaimType");

                    b.Property<string>("ClaimValue");

                    b.Property<string>("RoleId")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ClaimType");

                    b.Property<string>("ClaimValue");

                    b.Property<string>("UserId")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider");

                    b.Property<string>("ProviderKey");

                    b.Property<string>("ProviderDisplayName");

                    b.Property<string>("UserId")
                        .IsRequired();

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId");

                    b.Property<string>("RoleId");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId");

                    b.Property<string>("LoginProvider");

                    b.Property<string>("Name");

                    b.Property<string>("Value");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("FiverrEsqueApi.Models.Domain.AppUserInterest", b =>
                {
                    b.HasOne("FiverrEsqueApi.Models.Domain.AppUser", "AppUser")
                        .WithMany("Interests")
                        .HasForeignKey("AppUserId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("FiverrEsqueApi.Models.Domain.Interest", "Interest")
                        .WithMany("InterestedUsers")
                        .HasForeignKey("InterestId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("FiverrEsqueApi.Models.Domain.AppUserLanguage", b =>
                {
                    b.HasOne("FiverrEsqueApi.Models.Domain.AppUser", "AppUser")
                        .WithMany("Languages")
                        .HasForeignKey("AppUserId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("FiverrEsqueApi.Models.Domain.Language", "Language")
                        .WithMany("LanguageSpeakers")
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("FiverrEsqueApi.Models.Domain.AppUserNotification", b =>
                {
                    b.HasOne("FiverrEsqueApi.Models.Domain.AppUser", "AppUser")
                        .WithMany("Notifications")
                        .HasForeignKey("AppUserId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("FiverrEsqueApi.Models.Domain.Notification", "Notification")
                        .WithMany("Recipients")
                        .HasForeignKey("NotificationId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("FiverrEsqueApi.Models.Domain.AppUserSkill", b =>
                {
                    b.HasOne("FiverrEsqueApi.Models.Domain.AppUser", "AppUser")
                        .WithMany("Skills")
                        .HasForeignKey("AppUserId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("FiverrEsqueApi.Models.Domain.Skill", "Skill")
                        .WithMany("SkilledUsers")
                        .HasForeignKey("SkillId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("FiverrEsqueApi.Models.Domain.Attachment", b =>
                {
                    b.HasOne("FiverrEsqueApi.Models.Domain.Message", "Message")
                        .WithMany("Attachments")
                        .HasForeignKey("MessageId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("FiverrEsqueApi.Models.Domain.Gig", b =>
                {
                    b.HasOne("FiverrEsqueApi.Models.Domain.AppUser", "Seller")
                        .WithMany("Gigs")
                        .HasForeignKey("SellerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("FiverrEsqueApi.Models.Domain.Message", b =>
                {
                    b.HasOne("FiverrEsqueApi.Models.Domain.AppUser", "Receiver")
                        .WithMany("ReceivedMessages")
                        .HasForeignKey("ReceiverId");

                    b.HasOne("FiverrEsqueApi.Models.Domain.AppUser", "Sender")
                        .WithMany("SentMessages")
                        .HasForeignKey("SenderId");
                });

            modelBuilder.Entity("FiverrEsqueApi.Models.Domain.Review", b =>
                {
                    b.HasOne("FiverrEsqueApi.Models.Domain.AppUser", "Buyer")
                        .WithMany("GigReviewsAsBuyer")
                        .HasForeignKey("BuyerId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("FiverrEsqueApi.Models.Domain.Rating", "Rating")
                        .WithOne("Review")
                        .HasForeignKey("FiverrEsqueApi.Models.Domain.Review", "RatingId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("FiverrEsqueApi.Models.Domain.AppUser", "Seller")
                        .WithMany("GigReviewsAsSeller")
                        .HasForeignKey("SellerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("FiverrEsqueApi.Models.Domain.AppUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("FiverrEsqueApi.Models.Domain.AppUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("FiverrEsqueApi.Models.Domain.AppUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("FiverrEsqueApi.Models.Domain.AppUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
